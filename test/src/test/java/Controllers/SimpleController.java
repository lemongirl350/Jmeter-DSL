package Controllers;

import org.apache.http.entity.ContentType;
import org.apache.jmeter.extractor.gui.HtmlExtractorGui;
import org.apache.jmeter.protocol.http.util.HTTPConstants;
import us.abstracta.jmeter.javadsl.core.assertions.DslResponseAssertion;
import us.abstracta.jmeter.javadsl.core.controllers.DslSimpleController;

import java.nio.charset.StandardCharsets;
import java.time.Duration;

import us.abstracta.jmeter.javadsl.core.postprocessors.DslJsonExtractor;

import static us.abstracta.jmeter.javadsl.JmeterDsl.*;
import static us.abstracta.jmeter.javadsl.wrapper.WrapperJmeterDsl.testElement;

public class SimpleController {
    public static DslSimpleController adminLogin() {
        return simpleController("SC_Admin login",
                httpSampler("<_/", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8"),
                httpSampler("<_/login", "${PROTOCOL}://${HOST}:${PORT}/login/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .param("next", "/")
                        .children(
                                regexExtractor("token1", "n\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token0_ERR")
                        ),
                httpSampler(">_/login", "${PROTOCOL}://${HOST}:${PORT}/login/")
                        .method(HTTPConstants.POST)
                        .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/login/?next=/")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .param("username", "${ADMIN_LOGIN}")
                        .param("password", "${ADMIN_PASS}")
                        .param("next", "/")
                        .param("csrfmiddlewaretoken", "${token1}")
                        .encoding(StandardCharsets.UTF_8),
                httpSampler("<_/tickets", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/login/?next=/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("path1", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path1_ERR"),
                                responseAssertion()
                                        .containsRegexes("logout")
                        ),
                httpSampler("<_/datatables_ticket_list/${path1}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path1}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722071812757")
        );
    }

    public static DslSimpleController createUser() {
        return simpleController("SC_Create user",
                httpSampler("<_/system_settings", "${PROTOCOL}://${HOST}:${PORT}/system_settings/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/admin/auth/user", "${PROTOCOL}://${HOST}:${PORT}/admin/auth/user/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/system_settings/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/admin/auth/user/add", "${PROTOCOL}://${HOST}:${PORT}/admin/auth/user/add/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/${ADMIN_LOGIN}/auth/user/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("token2", "n\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token2_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler(">_/admin/auth/user/add/", "${PROTOCOL}://${HOST}:${PORT}/admin/auth/user/add/")
                        .method(HTTPConstants.POST)
                        .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/${ADMIN_LOGIN}/auth/user/add/")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .param("csrfmiddlewaretoken", "${token2}")
                        .param("username", "${__RandomString(8,ksjdhxksjehsleifeoprimcifrskdu,username)}")
                        .param("password1", "${__RandomString(10,sfmeoirufeiuryn98743897485638746,password)}")
                        .param("password2", "${password}")
                        .rawParam("_save", "Save")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                regexExtractor("user_id", "href=\\\"/admin/auth/user/(.*)/change")
                                        .defaultValue("user_id_ERR"),
                                jsr223PostProcessor("users.csv <<< JSR223", "FileWriter fwriter = new FileWriter(\"C:/Users/yellowstone/IdeaProjects/test/src/main/resources/users.csv\", true);\n"
                                        + "String line = vars.get(\"username\") + ',' + vars.get(\"password\") + ',' + vars.get(\"user_id\") + '\\n';\n"
                                        + "fwriter.write(line);\n"
                                        + "fwriter.close();\n"
                                        + ""),
                                debugPostProcessor()
                        ),
                httpSampler("<_/admin/auth/user/${user_id}/change", "${PROTOCOL}://${HOST}:${PORT}/admin/auth/user/${user_id}/change/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/${ADMIN_LOGIN}/auth/user/add/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("token3", "n\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token3_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler(">_/admin/auth/user/${user_id}/change", "${PROTOCOL}://${HOST}:${PORT}/admin/auth/user/${user_id}/change/")
                        .method(HTTPConstants.POST)
                        .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/${ADMIN_LOGIN}/auth/user/3/change/")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .param("csrfmiddlewaretoken", "${token3}")
                        .param("username", "${username}")
                        .rawParam("first_name", "")
                        .rawParam("last_name", "")
                        .rawParam("email", "")
                        .rawParam("is_active", "on")
                        .rawParam("is_staff", "on")
                        .rawParam("last_login_0", "")
                        .rawParam("last_login_1", "")
                        .rawParam("date_joined_0", "2024-07-27")
                        .param("date_joined_1", "20:56:18")
                        .rawParam("initial-date_joined_0", "2024-07-27")
                        .param("initial-date_joined_1", "20:56:18")
                        .rawParam("_save", "Save")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/admin/auth/user", "${PROTOCOL}://${HOST}:${PORT}/admin/auth/user/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/${ADMIN_LOGIN}/auth/user/3/change/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/admin//auth/user/", "${PROTOCOL}://${HOST}:${PORT}/admin/auth/user/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/${ADMIN_LOGIN}/auth/user/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .param("q", "${username}")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                responseAssertion()
                                        .containsSubstrings("${username}"),
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController createTicket() {
        return simpleController("SC_Create ticket",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/logout/", "${PROTOCOL}://${HOST}:${PORT}/logout/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/login/", "${PROTOCOL}://${HOST}:${PORT}/login/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .param("next", "/")
                        .children(
                                regexExtractor("token4", "n\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token4_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler(">_/login/", "${PROTOCOL}://${HOST}:${PORT}/login/")
                        .method(HTTPConstants.POST)
                        .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/login/?next=/")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .param("username", "${login_csv}")
                        .param("password", "${pass_csv}")
                        .param("next", "/")
                        .param("csrfmiddlewaretoken", "${token4}")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/login/?next=/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/submit/", "${PROTOCOL}://${HOST}:${PORT}/tickets/submit/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("token5", "n\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token5_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler(">_/tickets/submit/", "${PROTOCOL}://${HOST}:${PORT}/tickets/submit/")
                        .method(HTTPConstants.POST)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/submit/")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .bodyPart("csrfmiddlewaretoken", "${token5}", ContentType.TEXT_PLAIN)
                        .bodyPart("queue", "${__Random(1,2,)}", ContentType.TEXT_PLAIN)
                        .bodyPart("title", "${__RandomString(20,ehioyhniuymqiuriuyteniunyepo2ipctuiutyn4tyb4trey2tv3yrvyct3,)}", ContentType.TEXT_PLAIN)
                        .bodyPart("body", "${__RandomString(100,ehioyhniuymqiuriuyteniunyetrzpo2ipctuiutyn4tyb4trey2tv3yrvyct3,)}", ContentType.TEXT_PLAIN)
                        .bodyPart("priority", "${__Random(1,5,)}", ContentType.TEXT_PLAIN)
                        .bodyPart("due_date", "${__Random(2024,2030,)}-${__Random(08,12,)}-${__Random(1,28,)} 00:00:00", ContentType.TEXT_PLAIN)
                        .bodyPart("attachment", "", ContentType.APPLICATION_OCTET_STREAM)
                        .bodyPart("submitter_email", "${__RandomString(8,abcdefghijklmnopqrstuvwxyz,)}@${__RandomString(5,abcdefghijklmnopqrstuvwxyz,)}.com ", ContentType.TEXT_PLAIN)
                        .bodyPart("assigned_to", "${__Random(57,68,)}", ContentType.TEXT_PLAIN)
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                regexExtractor("ticket_id", "<a href=\\\"/tickets/(.*)/edit/\\\" class=\\\"ticket-edit\\\">")
                                        .defaultValue("ticket_id_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/${ticket_id}/", "${PROTOCOL}://${HOST}:${PORT}/tickets/${ticket_id}/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/submit/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                responseAssertion()
                                        .containsRegexes("${ticket_id}"),
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController userLogin() {
        return simpleController("SC_User login",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/logout/", "${PROTOCOL}://${HOST}:${PORT}/logout/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/login/", "${PROTOCOL}://${HOST}:${PORT}/login/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .param("next", "/")
                        .children(
                                regexExtractor("token6", "n\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token6_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler(">_/login/", "${PROTOCOL}://${HOST}:${PORT}/login/")
                        .method(HTTPConstants.POST)
                        .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/login/?next=/")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .param("username", "${login_csv}")
                        .param("password", "${pass_csv}")
                        .param("next", "/")
                        .param("csrfmiddlewaretoken", "${token6}")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController pagination() {
        return simpleController("SC_Pagination",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/login/?next=/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("path2", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path2_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path2}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path2}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Priority", "u=0")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "2")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "10")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722342173886")
                        .children(
                                jsonExtractor("ticketsTotal", "$.recordsTotal")
                                        .queryLanguage(DslJsonExtractor.JsonQueryLanguage.JSON_PATH)
                                        .defaultValue("ticketsTotal_ERR"),
                                jsr223PostProcessor("pagesTotal, start <<< JSR223", "import java.util.Random\n"
                                        + "\n"
                                        + "// Общее количество тикетов\n"
                                        + "def totalTickets = vars.get(\"ticketsTotal\") as int\n"
                                        + "\n"
                                        + "// Количество тикетов на одной странице = 10\n"
                                        + "def ticketsPerPage = 10\n"
                                        + "\n"
                                        + "// Расчет количества страниц\n"
                                        + "def totalPages = Math.ceil(totalTickets / (ticketsPerPage as double))\n"
                                        + "int totalPagesInt = totalPages as int\n"
                                        + "\n"
                                        + "// Сохранение выбранной страницы в переменной\n"
                                        + "vars.put(\"pagesTotal\", totalPagesInt.toString())\n"
                                        + "\n"
                                        + "// Генерация случайного числа в диапазоне от 2 до totalPagesInt\n"
                                        + "Random random = new Random()\n"
                                        + "int randomPage = 2 + random.nextInt(totalPagesInt - 1)\n"
                                        + "//vars.put(\"randomPage\", randomPage.toString())\n"
                                        + "\n"
                                        + "// Расчет параметра start для GET-запроса\n"
                                        + "int start = randomPage * 10 - 10\n"
                                        + "\n"
                                        + "// Сохранение результата в переменной\n"
                                        + "vars.put(\"start\", start.toString())"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path2}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path2}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Priority", "u=0")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "3")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .param("start", "${start}")
                        .rawParam("length", "10")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722342173887")
                        .children(
                                responseAssertion()
                                        .fieldToTest(DslResponseAssertion.TargetField.RESPONSE_CODE)
                                        .containsRegexes("200"),
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController filter() {
        return simpleController("SC_Filter",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?saved_query=4")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("path3", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path3_ERR"),
                                regexExtractor("field1", "<select id='id_owners' name='(.+?)'")
                                        .defaultValue("field1_ERR"),
                                regexExtractor("field2", "<select id='id_queues' name='(.+?)'")
                                        .defaultValue("field2_ERR"),
                                regexExtractor("field3", "<select id='id_statuses' name='(.+?)'")
                                        .defaultValue("field3_ERR"),
                                regexExtractor("field4", "<input type='text' name='(.+?)'")
                                        .defaultValue("field4_ERR"),
                                regexExtractor("field5", "<input type='text' name='(.+?)'")
                                        .matchNumber(3)
                                        .defaultValue("field5_ERR"),
                                regexExtractor("field6", "<select id='id_kbitems' name='(.+?)'")
                                        .defaultValue("field6_ERR"),
                                jsr223PostProcessor("randomField <<< JSR223", "def fields = [vars.get(\"field1\"), vars.get(\"field2\"), vars.get(\"field3\"), vars.get(\"field4\"), vars.get(\"field5\")\n"
                                        + ", vars.get(\"field6\")] // список извлеченных значений\n"
                                        + "def randomField = fields[new Random().nextInt(fields.size())] // выбор случайного поля\n"
                                        + "vars.put(\"randomField\", randomField) // сохранение случайного поля в переменную"),
                                jsr223PostProcessor("randomValue <<< JSR223", "import java.time.LocalDate\n"
                                        + "import java.time.format.DateTimeFormatter\n"
                                        + "import java.util.Random\n"
                                        + "\n"
                                        + "// Инициализация рандомайзера\n"
                                        + "Random random = new Random()\n"
                                        + "\n"
                                        + "// Получение значения randomField\n"
                                        + "String randomField = vars.get(\"randomField\")\n"
                                        + "String field1 = vars.get(\"field1\")\n"
                                        + "String field2 = vars.get(\"field2\")\n"
                                        + "String field3 = vars.get(\"field3\")\n"
                                        + "String field4 = vars.get(\"field4\")\n"
                                        + "String field5 = vars.get(\"field5\")\n"
                                        + "String field6 = vars.get(\"field6\")\n"
                                        + "\n"
                                        + "// Инициализация переменной для хранения результата\n"
                                        + "String randomValue = \"\"\n"
                                        + "\n"
                                        + "// Определение значения randomValue в зависимости от значения randomField\n"
                                        + "switch(randomField) {\n"
                                        + "    case field1: //assigned_to\n"
                                        + "        randomValue = (22 + random.nextInt(17)).toString()\n"
                                        + "        break\n"
                                        + "    case field2: //queue\n"
                                        + "        randomValue = (1 + random.nextInt(2)).toString()\n"
                                        + "        break\n"
                                        + "    case field3: //status\n"
                                        + "        randomValue = (1 + random.nextInt(5)).toString()\n"
                                        + "        break\n"
                                        + "    case field5: //q\n"
                                        + "        String letters = \"dtnceiruyevrinfiweuyhfneik\"\n"
                                        + "        int length = 5 + random.nextInt(6) // длина строки от 5 до 10 символов\n"
                                        + "        StringBuilder sb = new StringBuilder(length)\n"
                                        + "        for (int i = 0; i < length; i++) {\n"
                                        + "            sb.append(letters.charAt(random.nextInt(letters.length())))\n"
                                        + "        }\n"
                                        + "        randomValue = sb.toString()\n"
                                        + "        break\n"
                                        + "    case field6: //kbitem\n"
                                        + "        int[] values = [-1, 1, 2, 3]\n"
                                        + "        randomValue = values[random.nextInt(values.length)].toString()\n"
                                        + "        break\n"
                                        + "    case field4: //date_from\n"
                                        + "        int year = 2022 + random.nextInt(3) // год от 2022 до 2024\n"
                                        + "        int month = 1 + random.nextInt(12) // месяц от 1 до 12\n"
                                        + "        int day = 1 + random.nextInt(28) // день от 1 до 28 (чтобы избежать проблем с февралем)\n"
                                        + "        LocalDate date = LocalDate.of(year, month, day)\n"
                                        + "        randomValue = date.format(DateTimeFormatter.ISO_DATE)\n"
                                        + "        break\n"
                                        + "    default:\n"
                                        + "        randomValue = \"Unknown field\"\n"
                                        + "        break\n"
                                        + "}\n"
                                        + "\n"
                                        + "// Установка значения randomValue в переменную JMeter\n"
                                        + "vars.put(\"randomValue\", randomValue)\n"
                                        + ""),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path3}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path3}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722869427301")
                        .children(
                                debugPostProcessor()
                        ),
                ifController("${__groovy(vars.get(\"randomField\") == vars.get(\"field4\"),)}",
                        httpSampler("<_/tickets/__filter by date__", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .rawParam("sortx", "created")
                                .param("date_from", "${randomValue}")
                                .param("date_to", "${__Random(2022,2024,)}-${__Random(01,12,)}-${__Random(1,28,)}")
                                .rawParam("q", "")
                                .encoding(StandardCharsets.UTF_8)
                                .children(
                                        regexExtractor("token7", "name=\\\"csrfmiddlewaretoken\\\" value=\\\"(.*)\\\">")
                                                .defaultValue("token7_ERR"),
                                        regexExtractor("query_encoded", "name='query_encoded' value='(.*)'/>")
                                                .defaultValue("query_encoded_ERR"),
                                        regexExtractor("path4", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                                .defaultValue("path4_ERR"),
                                        debugPostProcessor()
                                )
                ),
                ifController("${__groovy(vars.get(\"randomField\") != vars.get(\"field4\"),)}",
                        httpSampler("<_/tickets/__filter NOT by date__", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .rawParam("sortx", "created")
                                .param("${randomField}", "${randomValue}")
                                .rawParam("date_from", "")
                                .rawParam("date_to", "")
                                .rawParam("q", "")
                                .encoding(StandardCharsets.UTF_8)
                                .children(
                                        regexExtractor("token7", "name=\\\"csrfmiddlewaretoken\\\" value=\\\"(.*)\\\">")
                                                .defaultValue("token7_ERR"),
                                        regexExtractor("query_encoded", "name='query_encoded' value='(.*)'/>")
                                                .defaultValue("query_encoded_ERR"),
                                        regexExtractor("path4", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                                .defaultValue("path4_ERR"),
                                        debugPostProcessor()
                                )
                ),
                httpSampler("<_/datatables_ticket_list/${path4}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path4}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&queue=1&status=1&date_from=&date_to=&q=")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722869439797")
                        .children(
                                debugPostProcessor()
                        ),
                percentController(10.0f,
                        httpSampler(">_/save_query/", "${PROTOCOL}://${HOST}:${PORT}/save_query/")
                                .method(HTTPConstants.POST)
                                .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&queue=1&status=1&date_from=&date_to=&q=")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .header("Sec-GPC", "1")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .param("csrfmiddlewaretoken", "${token7}")
                                .param("query_encoded", "${query_encoded}")
                                .param("title", "${__RandomString(10,qwertyuiopasdfghjklzxcvbnm1234567890,query_title)}")
                                .children(
                                        regexExtractor("query_id", "/reports/\\?saved_query=(.*)'>Run a report<")
                                                .defaultValue("query_id_ERR"),
                                        debugPostProcessor()
                                ),
                        httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&queue=1&status=1&date_from=&date_to=&q=")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .param("saved_query", "${query_id}")
                                .encoding(StandardCharsets.UTF_8)
                                .children(
                                        regexExtractor("path5", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                                .defaultValue("path5_ERR"),
                                        responseAssertion()
                                                .containsRegexes("${query_title}"),
                                        debugPostProcessor()
                                ),
                        httpSampler("<_/datatables_ticket_list/${path5}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path5}")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?saved_query=5")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("X-Requested-With", "XMLHttpRequest")
                                .header("DNT", "1")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "application/json, text/javascript, */*; q=0.01")
                                .rawParam("draw", "1")
                                .param("columns[0][data]", "id")
                                .param("columns[0][name]", "")
                                .param("columns[0][searchable]", "true")
                                .param("columns[0][orderable]", "false")
                                .param("columns[0][search][value]", "")
                                .param("columns[0][search][regex]", "false")
                                .param("columns[1][data]", "ticket")
                                .param("columns[1][name]", "")
                                .param("columns[1][searchable]", "true")
                                .param("columns[1][orderable]", "true")
                                .param("columns[1][search][value]", "")
                                .param("columns[1][search][regex]", "false")
                                .param("columns[2][data]", "priority")
                                .param("columns[2][name]", "")
                                .param("columns[2][searchable]", "true")
                                .param("columns[2][orderable]", "true")
                                .param("columns[2][search][value]", "")
                                .param("columns[2][search][regex]", "false")
                                .param("columns[3][data]", "queue")
                                .param("columns[3][name]", "")
                                .param("columns[3][searchable]", "true")
                                .param("columns[3][orderable]", "true")
                                .param("columns[3][search][value]", "")
                                .param("columns[3][search][regex]", "false")
                                .param("columns[4][data]", "status")
                                .param("columns[4][name]", "")
                                .param("columns[4][searchable]", "true")
                                .param("columns[4][orderable]", "true")
                                .param("columns[4][search][value]", "")
                                .param("columns[4][search][regex]", "false")
                                .param("columns[5][data]", "created")
                                .param("columns[5][name]", "")
                                .param("columns[5][searchable]", "true")
                                .param("columns[5][orderable]", "true")
                                .param("columns[5][search][value]", "")
                                .param("columns[5][search][regex]", "false")
                                .param("columns[6][data]", "due_date")
                                .param("columns[6][name]", "")
                                .param("columns[6][searchable]", "true")
                                .param("columns[6][orderable]", "true")
                                .param("columns[6][search][value]", "")
                                .param("columns[6][search][regex]", "false")
                                .param("columns[7][data]", "assigned_to")
                                .param("columns[7][name]", "")
                                .param("columns[7][searchable]", "true")
                                .param("columns[7][orderable]", "true")
                                .param("columns[7][search][value]", "")
                                .param("columns[7][search][regex]", "false")
                                .param("columns[8][data]", "submitter")
                                .param("columns[8][name]", "")
                                .param("columns[8][searchable]", "true")
                                .param("columns[8][orderable]", "true")
                                .param("columns[8][search][value]", "")
                                .param("columns[8][search][regex]", "false")
                                .param("columns[9][data]", "time_spent")
                                .param("columns[9][name]", "")
                                .param("columns[9][searchable]", "true")
                                .param("columns[9][orderable]", "true")
                                .param("columns[9][search][value]", "")
                                .param("columns[9][search][regex]", "false")
                                .param("columns[10][data]", "kbitem")
                                .param("columns[10][name]", "")
                                .param("columns[10][searchable]", "true")
                                .param("columns[10][orderable]", "true")
                                .param("columns[10][search][value]", "")
                                .param("columns[10][search][regex]", "false")
                                .param("order[0][column]", "0")
                                .param("order[0][dir]", "asc")
                                .rawParam("start", "0")
                                .rawParam("length", "25")
                                .param("search[value]", "")
                                .param("search[regex]", "false")
                                .rawParam("_", "1722869454836")
                                .children(
                                        debugPostProcessor()
                                )
                )
        );
    }

    public static DslSimpleController openTask() {
        return simpleController("SC_Open task",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?saved_query=4")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("path6", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path6_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path6}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path6}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722869427301")
                        .children(
                                jsonExtractor("random_ticket_id", "data[*].id")
                                        .queryLanguage(DslJsonExtractor.JsonQueryLanguage.JSON_PATH)
                                        .matchNumber(0)
                                        .defaultValue("random_ticket_id_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/${random_ticket_id}/", "${PROTOCOL}://${HOST}:${PORT}/tickets/${random_ticket_id}/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                testElement("unchecked_values <<< CSS", new HtmlExtractorGui())
                                        .prop("HtmlExtractor.refname", "unchecked_values")
                                        .prop("HtmlExtractor.expr", "div.form-group label:not(:has(input[checked=\"checked\"])) input")
                                        .prop("HtmlExtractor.attribute", "value")
                                        .prop("HtmlExtractor.default", "unchecked_values-ERR")
                                        .prop("HtmlExtractor.match_number", "-1"),
                                regexExtractor("is_assigned", "<td>(.*) <strong>")
                                        .defaultValue("is_assigned_ERR"),
                                jsr223PostProcessor("random_unchecked_value <<< JSR223", "// Получаем количество значений\n"
                                        + "def count = vars.get(\"unchecked_values_matchNr\") as int\n"
                                        + "\n"
                                        + "// Генерируем случайный индекс\n"
                                        + "def randomIndex = new Random().nextInt(count) + 1\n"
                                        + "\n"
                                        + "// Получаем случайное значение\n"
                                        + "def randomValue = vars.get(\"unchecked_values_\" + randomIndex)\n"
                                        + "\n"
                                        + "// Сохраняем результат в новую переменную\n"
                                        + "vars.put(\"random_unchecked_value\", randomValue)\n"
                                        + ""),
                                regexExtractor("token8", "name=\\\"csrfmiddlewaretoken\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token8_ERR"),
                                responseAssertion()
                                        .containsRegexes("${random_ticket_id}"),
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController assignTask() {
        return simpleController("SC_Assign task",
                ifController("${__groovy(vars.get(\"is_assigned\").equals(\"Unassigned\"),)}",
                        httpDefaults()
                                .encoding(StandardCharsets.UTF_8),
                        httpSampler("<_/tickets/${random_ticket_id}/", "${PROTOCOL}://${HOST}:${PORT}/tickets/${random_ticket_id}/")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/18/")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .rawParam("take", "")
                                .children(
                                        debugPostProcessor()
                                ),
                        httpSampler("<_/tickets/${random_ticket_id}/", "${PROTOCOL}://${HOST}:${PORT}/tickets/${random_ticket_id}/")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/18/")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .children(
                                        responseAssertion()
                                                .containsRegexes("${login_csv}"),
                                        debugPostProcessor()
                                )
                )
        );
    }

    public static DslSimpleController changeStatus() {
        return simpleController("SC_Change status",
                httpSampler(">_/tickets/${random_ticket_id}/update/", "${PROTOCOL}://${HOST}:${PORT}/tickets/${random_ticket_id}/update/")
                        .method(HTTPConstants.POST)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/33/")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .bodyPart("comment", "${__RandomString(10,qwertyuioopasdfghjkl24456678,comment)}", ContentType.TEXT_PLAIN)
                        .bodyPart("new_status", "${random_unchecked_value}", ContentType.TEXT_PLAIN)
                        .bodyPart("public", "1", ContentType.TEXT_PLAIN)
                        .bodyPart("time_spent", "", ContentType.TEXT_PLAIN)
                        .bodyPart("title", "vkucfstlytqvdwqebija", ContentType.TEXT_PLAIN)
                        .bodyPart("owner", "0", ContentType.TEXT_PLAIN)
                        .bodyPart("priority", "2", ContentType.TEXT_PLAIN)
                        .bodyPart("due_date", "", ContentType.TEXT_PLAIN)
                        .bodyPart("attachment", "", ContentType.APPLICATION_OCTET_STREAM)
                        .bodyPart("csrfmiddlewaretoken", "${token8}", ContentType.TEXT_PLAIN)
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/${random_ticket_id}/", "${PROTOCOL}://${HOST}:${PORT}/tickets/${random_ticket_id}/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/33/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                responseAssertion()
                                        .containsRegexes(
                                                "[${random_unchecked_value}]",
                                                "${comment}"
                                        ),
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController deleteTicket() {
        return simpleController("SC_Delete ticket",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/26/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("path7", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path7_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path7}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path7}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722945446986")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .rawParam("sortx", "created")
                        .rawParam("status", "5")
                        .rawParam("date_from", "")
                        .rawParam("date_to", "")
                        .rawParam("q", "")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                regexExtractor("path8", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path8_ERR"),
                                regexExtractor("token9", "name=\\\"csrfmiddlewaretoken\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token9_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path8}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path8}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&status=5&date_from=&date_to=&q=")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722945454601")
                        .children(
                                jsonExtractor("duplicate_tickets_amount", "$.recordsTotal")
                                        .queryLanguage(DslJsonExtractor.JsonQueryLanguage.JSON_PATH)
                                        .defaultValue("duplicate_tickets_amount_ERR"),
                                jsonExtractor("rand_ticket_id", "data[*].id")
                                        .queryLanguage(DslJsonExtractor.JsonQueryLanguage.JSON_PATH)
                                        .matchNumber(0)
                                        .defaultValue("rand_ticket_id_ERR"),
                                debugPostProcessor()
                        ),
                ifController("${__groovy(vars.get(\"duplicate_tickets_amount\") != \"0\",)}",
                        httpSampler(">_/tickets/update/", "${PROTOCOL}://${HOST}:${PORT}/tickets/update/")
                                .method(HTTPConstants.POST)
                                .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&status=5&date_from=&date_to=&q=")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .header("Sec-GPC", "1")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .param("csrfmiddlewaretoken", "${token9}")
                                .rawParam("ticketTable_length", "25")
                                .param("ticket_id", "${rand_ticket_id}")
                                .rawParam("action", "delete")
                                .children(
                                        debugPostProcessor()
                                ),
                        httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&status=5&date_from=&date_to=&q=")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("Upgrade-Insecure-Requests", "1")
                                .header("DNT", "1")
                                .header("Priority", "u=0, i")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                                .encoding(StandardCharsets.UTF_8)
                                .children(
                                        regexExtractor("path9", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                                .defaultValue("path9_ERR"),
                                        debugPostProcessor()
                                ),
                        httpSampler("<_/datatables_ticket_list/${path9}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path9}")
                                .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                                .header("Sec-GPC", "1")
                                .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                                .header("X-Requested-With", "XMLHttpRequest")
                                .header("DNT", "1")
                                .header("Accept-Encoding", "gzip, deflate")
                                .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                                .header("Accept", "application/json, text/javascript, */*; q=0.01")
                                .rawParam("draw", "1")
                                .param("columns[0][data]", "id")
                                .param("columns[0][name]", "")
                                .param("columns[0][searchable]", "true")
                                .param("columns[0][orderable]", "false")
                                .param("columns[0][search][value]", "")
                                .param("columns[0][search][regex]", "false")
                                .param("columns[1][data]", "ticket")
                                .param("columns[1][name]", "")
                                .param("columns[1][searchable]", "true")
                                .param("columns[1][orderable]", "true")
                                .param("columns[1][search][value]", "")
                                .param("columns[1][search][regex]", "false")
                                .param("columns[2][data]", "priority")
                                .param("columns[2][name]", "")
                                .param("columns[2][searchable]", "true")
                                .param("columns[2][orderable]", "true")
                                .param("columns[2][search][value]", "")
                                .param("columns[2][search][regex]", "false")
                                .param("columns[3][data]", "queue")
                                .param("columns[3][name]", "")
                                .param("columns[3][searchable]", "true")
                                .param("columns[3][orderable]", "true")
                                .param("columns[3][search][value]", "")
                                .param("columns[3][search][regex]", "false")
                                .param("columns[4][data]", "status")
                                .param("columns[4][name]", "")
                                .param("columns[4][searchable]", "true")
                                .param("columns[4][orderable]", "true")
                                .param("columns[4][search][value]", "")
                                .param("columns[4][search][regex]", "false")
                                .param("columns[5][data]", "created")
                                .param("columns[5][name]", "")
                                .param("columns[5][searchable]", "true")
                                .param("columns[5][orderable]", "true")
                                .param("columns[5][search][value]", "")
                                .param("columns[5][search][regex]", "false")
                                .param("columns[6][data]", "due_date")
                                .param("columns[6][name]", "")
                                .param("columns[6][searchable]", "true")
                                .param("columns[6][orderable]", "true")
                                .param("columns[6][search][value]", "")
                                .param("columns[6][search][regex]", "false")
                                .param("columns[7][data]", "assigned_to")
                                .param("columns[7][name]", "")
                                .param("columns[7][searchable]", "true")
                                .param("columns[7][orderable]", "true")
                                .param("columns[7][search][value]", "")
                                .param("columns[7][search][regex]", "false")
                                .param("columns[8][data]", "submitter")
                                .param("columns[8][name]", "")
                                .param("columns[8][searchable]", "true")
                                .param("columns[8][orderable]", "true")
                                .param("columns[8][search][value]", "")
                                .param("columns[8][search][regex]", "false")
                                .param("columns[9][data]", "time_spent")
                                .param("columns[9][name]", "")
                                .param("columns[9][searchable]", "true")
                                .param("columns[9][orderable]", "true")
                                .param("columns[9][search][value]", "")
                                .param("columns[9][search][regex]", "false")
                                .param("columns[10][data]", "kbitem")
                                .param("columns[10][name]", "")
                                .param("columns[10][searchable]", "true")
                                .param("columns[10][orderable]", "true")
                                .param("columns[10][search][value]", "")
                                .param("columns[10][search][regex]", "false")
                                .param("order[0][column]", "0")
                                .param("order[0][dir]", "asc")
                                .rawParam("start", "0")
                                .rawParam("length", "25")
                                .param("search[value]", "")
                                .param("search[regex]", "false")
                                .rawParam("_", "1722945478988")
                                .children(
                                        responseAssertion()
                                                .invertCheck()
                                                .containsRegexes("${rand_ticket_id}"),
                                        debugPostProcessor()
                                )
                )
        );
    }

    public static DslSimpleController closeTicket() {
        return simpleController("SC_Close ticket",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&status=1&status=2&date_from=&date_to=&q=")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("path10", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path10_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path10}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path10}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722949687279")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .rawParam("sortx", "created")
                        .rawParam("status", "1")
                        .rawParam("status", "2")
                        .rawParam("date_from", "")
                        .rawParam("date_to", "")
                        .rawParam("q", "")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                regexExtractor("path11", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path11_ERR"),
                                regexExtractor("token10", "name=\\\"csrfmiddlewaretoken\\\" value=\\\"(.*)\\\">")
                                        .defaultValue("token10_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path11}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path11}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&status=1&status=2&date_from=&date_to=&q=")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722949694238")
                        .children(
                                jsonExtractor("data", "$.data")
                                        .queryLanguage(DslJsonExtractor.JsonQueryLanguage.JSON_PATH)
                                        .defaultValue("data_ERR"),
                                jsr223PostProcessor("min_priority_id <<< JSR223", "import groovy.json.JsonSlurper\n"
                                        + "\n"
                                        + "// Получаем JSON массив\n"
                                        + "def jsonData = vars.get('data')\n"
                                        + "def parsedData = new JsonSlurper().parseText(jsonData)\n"
                                        + "\n"
                                        + "// Инициализируем переменные для хранения минимального значения priority и соответствующего id\n"
                                        + "def minPriority = Integer.MAX_VALUE\n"
                                        + "def minPriorityId = null\n"
                                        + "\n"
                                        + "// Проходим по каждому элементу массива\n"
                                        + "parsedData.each { record ->\n"
                                        + "    def priority = record.priority\n"
                                        + "    if (priority < minPriority) {\n"
                                        + "        minPriority = priority\n"
                                        + "        minPriorityId = record.id\n"
                                        + "    }\n"
                                        + "}\n"
                                        + "\n"
                                        + "// Сохраняем результат в переменные JMeter\n"
                                        + "vars.put('min_priority', minPriority.toString())\n"
                                        + "vars.put('min_priority_id', minPriorityId.toString())\n"
                                        + "\n"
                                        + ""),
                                debugPostProcessor()
                        ),
                httpSampler(">_/tickets/update/", "${PROTOCOL}://${HOST}:${PORT}/tickets/update/")
                        .method(HTTPConstants.POST)
                        .contentType(ContentType.APPLICATION_FORM_URLENCODED)
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&status=1&status=2&date_from=&date_to=&q=")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Origin", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .header("Sec-GPC", "1")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .param("csrfmiddlewaretoken", "${token10}")
                        .rawParam("ticketTable_length", "25")
                        .param("ticket_id", "${min_priority_id}")
                        .rawParam("action", "close")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/?sortx=created&status=1&status=2&date_from=&date_to=&q=")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .encoding(StandardCharsets.UTF_8)
                        .children(
                                regexExtractor("path12", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path12_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path12}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path12}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722949732819")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/tickets/${min_priority_id}/", "${PROTOCOL}://${HOST}:${PORT}/tickets/${min_priority_id}/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                responseAssertion()
                                        .containsRegexes("[Closed]"),
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController logout() {
        return simpleController("SC_Logout",
                httpSampler("<_/tickets/", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                regexExtractor("path11", "\\\"url\\\": \\\"/datatables_ticket_list/(.*)\\\",")
                                        .defaultValue("path11_ERR"),
                                debugPostProcessor()
                        ),
                httpSampler("<_/datatables_ticket_list/${path11}", "${PROTOCOL}://${HOST}:${PORT}/datatables_ticket_list/${path11}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("X-Requested-With", "XMLHttpRequest")
                        .header("DNT", "1")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "application/json, text/javascript, */*; q=0.01")
                        .rawParam("draw", "1")
                        .param("columns[0][data]", "id")
                        .param("columns[0][name]", "")
                        .param("columns[0][searchable]", "true")
                        .param("columns[0][orderable]", "false")
                        .param("columns[0][search][value]", "")
                        .param("columns[0][search][regex]", "false")
                        .param("columns[1][data]", "ticket")
                        .param("columns[1][name]", "")
                        .param("columns[1][searchable]", "true")
                        .param("columns[1][orderable]", "true")
                        .param("columns[1][search][value]", "")
                        .param("columns[1][search][regex]", "false")
                        .param("columns[2][data]", "priority")
                        .param("columns[2][name]", "")
                        .param("columns[2][searchable]", "true")
                        .param("columns[2][orderable]", "true")
                        .param("columns[2][search][value]", "")
                        .param("columns[2][search][regex]", "false")
                        .param("columns[3][data]", "queue")
                        .param("columns[3][name]", "")
                        .param("columns[3][searchable]", "true")
                        .param("columns[3][orderable]", "true")
                        .param("columns[3][search][value]", "")
                        .param("columns[3][search][regex]", "false")
                        .param("columns[4][data]", "status")
                        .param("columns[4][name]", "")
                        .param("columns[4][searchable]", "true")
                        .param("columns[4][orderable]", "true")
                        .param("columns[4][search][value]", "")
                        .param("columns[4][search][regex]", "false")
                        .param("columns[5][data]", "created")
                        .param("columns[5][name]", "")
                        .param("columns[5][searchable]", "true")
                        .param("columns[5][orderable]", "true")
                        .param("columns[5][search][value]", "")
                        .param("columns[5][search][regex]", "false")
                        .param("columns[6][data]", "due_date")
                        .param("columns[6][name]", "")
                        .param("columns[6][searchable]", "true")
                        .param("columns[6][orderable]", "true")
                        .param("columns[6][search][value]", "")
                        .param("columns[6][search][regex]", "false")
                        .param("columns[7][data]", "assigned_to")
                        .param("columns[7][name]", "")
                        .param("columns[7][searchable]", "true")
                        .param("columns[7][orderable]", "true")
                        .param("columns[7][search][value]", "")
                        .param("columns[7][search][regex]", "false")
                        .param("columns[8][data]", "submitter")
                        .param("columns[8][name]", "")
                        .param("columns[8][searchable]", "true")
                        .param("columns[8][orderable]", "true")
                        .param("columns[8][search][value]", "")
                        .param("columns[8][search][regex]", "false")
                        .param("columns[9][data]", "time_spent")
                        .param("columns[9][name]", "")
                        .param("columns[9][searchable]", "true")
                        .param("columns[9][orderable]", "true")
                        .param("columns[9][search][value]", "")
                        .param("columns[9][search][regex]", "false")
                        .param("columns[10][data]", "kbitem")
                        .param("columns[10][name]", "")
                        .param("columns[10][searchable]", "true")
                        .param("columns[10][orderable]", "true")
                        .param("columns[10][search][value]", "")
                        .param("columns[10][search][regex]", "false")
                        .param("order[0][column]", "0")
                        .param("order[0][dir]", "asc")
                        .rawParam("start", "0")
                        .rawParam("length", "25")
                        .param("search[value]", "")
                        .param("search[regex]", "false")
                        .rawParam("_", "1722955883166")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/logout/", "${PROTOCOL}://${HOST}:${PORT}/logout/")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                debugPostProcessor()
                        ),
                httpSampler("<_/", "${PROTOCOL}://${HOST}:${PORT}")
                        .header("Referer", "${PROTOCOL}://${HOST}:${PORT}/tickets/")
                        .header("Sec-GPC", "1")
                        .header("Accept-Language", "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3")
                        .header("Upgrade-Insecure-Requests", "1")
                        .header("DNT", "1")
                        .header("Priority", "u=0, i")
                        .header("Accept-Encoding", "gzip, deflate")
                        .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0")
                        .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8")
                        .children(
                                responseAssertion()
                                        .containsRegexes("Log In"),
                                debugPostProcessor()
                        )
        );
    }

    public static DslSimpleController delay() {
        return simpleController("SC_Delay",
                uniformRandomTimer(Duration.ofSeconds(1), Duration.ofSeconds(5))
        );
    }
}

